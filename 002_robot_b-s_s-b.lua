--[[ Ïðîñòîé MA-ðîáîò (c)QuikLuaCShapr.ru
!!! ÄËß ÈÑÏÎËÜÇÎÂÀÍÈß ÒÎËÜÊÎ Â ÎÁÐÀÇÎÂÀÒÅËÜÍÛÕ ÖÅËßÕ ÍÀ ÄÅÌÎ-Ñ×ÅÒÅ !!!

Ðîáîò òîðãóåò ïî 2-ì ïðîñòûì(simple) ñêîëüçÿùèì ñðåäíèì (MA).
1.Åñëè íåò îòêðûòûõ ðîáîòîì ïîçèöèé âûïîëíÿåòñÿ ñëåäóþùèé àëãîðèòì:
   1.Åñëè áûñòðàÿ ñêîëüçÿùàÿ ïåðåñåêàåò ìåäëåííóþ ñíèçó ââåðõ è íà òåêóùåé ñâå÷å åùå íå îòêðûâàëèñü ïîçèöèè, ñîâåðøàåòñÿ ïîêóïêà.
   2.Åñëè áûñòðàÿ ñêîëüçÿùàÿ ïåðåñåêàåò ìåäëåííóþ ñâåðõó âíèç è íà òåêóùåé ñâå÷å åùå íå îòêðûâàëèñü ïîçèöèè, ñîâåðøàåòñÿ ïðîäàæà.
2.Åñëè îòêðûëàñü ïîçèöèÿ, âûñòàâëÿåòñÿ "Òåéê-ïðîôèò è Ñòîï-ëèìèò"
3.Ðîáîò æäåò, ïîêà çàêðîåòñÿ ïîçè÷èÿ ïî Ñòîï-ëîññó, ëèáî Òåéê-ïðîôèòó, ïîñëå ÷åãî ïåðåõîäèò ê ïóíêòó ¹1

Îñîáåííîñòè:
1.Ðîáîò âûâîäèò â òåêñòîâûõ ñîîáùåíèÿõ èíôîðìàöèþ î êëþ÷åâûõ ìîìåíòàõ àëãîðèòìà, ó âñåõ åãî ñîîáùåíèé ïðåôèêñ "Ïðîñòîé MA-ðîáîò:".
2.Ðîáîò âñåãäà íàõîäèòñÿ â 1-ì èç 2-õ ñîñòîÿíèé(ROBOT_STATE):'Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ', ëèáî 'Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ'.
3.Åñëè ïðè âûñòàâëåíèè çàÿâêè íà ïðîäàæó ðîáîò óçíàåò, ÷òî îïåðàöèè øîðò çàïðåùåíû ïî äàííîìó èíñòðóìåíòó, îí áîëüøå íå áóäåò îòêðûâàòü øîðò, òîëüêî ëîíã.
4.Êîãäà ðîáîò ïîëó÷àåò ñèãíàë íà îòêðûòèå ñäåëêè, îí ñîâåðøàåò 10 ïîïûòîê ñ ïðìåæóòêàìè â 100 ìñ îòêðûòü ïîçèöèþ, åñëè ýòîãî íå óäàåòñÿ, îñòàíàâëèâàåò ñêðèïò.
5.Ïîñëå îòêðûòèÿ ïîçèöèè ðîáîò ñîâåðøàåò 10 ïîïûòîê ñ ïðìåæóòêàìè â 100 ìñ âûñòàâèòü Òýéê-ïðîôèò è Ñòîï-ëèìèò, à çàòåì äîæäàòüñÿ çàêðûòèÿ ïîçèöèè,
  åñëè ýòîãî íå óäàåòñÿ, îñòàíàâëèâàåò ñêðèïò.
6.Åñëè ñòîï-çàÿâêà ñðàáîòàëà, íî ïîçèöèÿ íå çàêðûëàñü â òå÷åíèè 10 ñåêóíä, ïûòàåòñÿ çà 10 ïîïûòîê ïðèíóäèòåëüíî çàêðûòü ïîçèöèþ âñòðå÷íîé ñäåëêîé.
  Åñëè ïîçèöèþ óäàëîñü çàêðûòü (äàæå ïðèíóäèòåëüíî), ïðîäîëæàåò ðàáîòàòü, èíà÷å ñêðèïò îñòàíàâëèâàåòñÿ.
]]

--/*ÍÀÑÒÐÀÈÂÀÅÌÛÅ ÏÀÐÀÌÅÒÐÛ*/
ACCOUNT           = 'SPBFUTJR9PN';        -- Èäåíòèôèêàòîð ñ÷åòà
CLASS_CODE        = 'SPBFUT';             -- Êîä êëàññà
SEC_CODE          = 'RIZ5';               -- Êîä áóìàãè
INTERVAL          = INTERVAL_M1;          -- Òàéìôðåéì ãðàôèêà (äëÿ ïîñòðîåíèÿ ñêîëüçÿùèõ)
SLOW_MA_PERIOD    = 20;                   -- ÏÅÐÈÎÄ ÌÅÄËÅÍÍÎÉ ñêîëüçÿùåé
SLOW_MA_SOURCE    = 'O';                  -- ÈÑÒÎ×ÍÈÊ ÌÅÄËÅÍÍÎÉ ñêîëüçÿùåé [O - open, C - close, H - hi, L - low]
FAST_MA_PERIOD    = 15;                    -- ÏÅÐÈÎÄ ÁÛÑÒÐÎÉ ñêîëüçÿùåé
FAST_MA_SOURCE    = 'O';                  -- ÈÑÒÎ×ÍÈÊ ÁÛÑÒÐÎÉ ñêîëüçÿùåé [O - open, C - close, H - hi, L - low]
STOP_LOSS         = 10;                   -- Ðàçìåð ÑÒÎÏ-ËÎÑÑÀ (â øàãàõ öåíû)
TAKE_PROFIT       = 5;                   -- Ðàçìåð ÒÅÉÊ-ÏÐÎÔÈÒÀ (â øàãàõ öåíû)

--/*ÐÀÁÎ×ÈÅ ÏÅÐÅÌÅÍÍÛÅ ÐÎÁÎÒÀ (ìåíÿòü íå íóæíî)*/
SEC_PRICE_STEP    = 0;                    -- ØÀÃ ÖÅÍÛ ÈÍÑÒÐÓÌÅÍÒÀ
SEC_NO_SHORT      = false;                -- Ôëàã, ÷òî ïî äàííîìó èíñòðóìåíòó çàïðåùåíû îïåðàöèè øîðò
DS                = nil;                  -- Èñòî÷íèê äàííûõ ãðàôèêà (DataSource)
ROBOT_STATE       ='Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ';-- ÑÎÑÒÎßÍÈÅ ðîáîòà ['Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ', ëèáî 'Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ']
trans_id          = os.time();            -- Çàäàåò íà÷àëüíûé íîìåð ID òðàíçàêöèé
trans_Status      = nil;                  -- Ñòàòóñ òåêóùåé òðàíçàêöèè èç ôóíêöèè OnTransPeply
trans_result_msg  = '';                   -- Ñîîáùåíèå ïî òåêóùåé òðàíçàêöèè èç ôóíêöèè OnTransPeply
CurrentDirect     = 'BUY';                -- Òåêóùåå ÍÀÏÐÀÂËÅÍÈÅ ['BUY', èëè 'SELL']
LastOpenBarIndex  =  0;                   -- Èíäåêñ ñâå÷è, íà êîòîðîé áûëà îòêðûòà ïîñëåäíÿÿ ïîçèöèÿ (íóæåí äëÿ òîãî, ÷òîáû ïîñëå çàêðûòèÿ ïî ñòîïó òóò æå íå îòêðûòü åùå îäíó ïîçèöèþ)

Run               = true;                 -- Ôëàã ïîääåðæàíèÿ ðàáîòû áåñêîíå÷íîãî öèêëà â main

-- Ôóíêöèÿ ïåðâè÷íîé èíèöèàëèçàöèè ñêðèïòà (ÂÛÇÛÂÀÅÒÑß ÒÅÐÌÈÍÀËÎÌ QUIK â ñàìîì íà÷àëå)
function OnInit()
   -- Ïîëó÷àåò äîñòóï ê ñâå÷àì ãðàôèêà
   local Error = '';
   DS,Error = CreateDataSource(CLASS_CODE, SEC_CODE, INTERVAL);
   -- Ïðîâåðêà
   if DS == nil then
      message('Ïðîñòîé MA-ðîáîò:ÎØÈÁÊÀ ïîëó÷åíèÿ äîñòóïà ê ñâå÷àì! '..Error);
      -- Çàâåðøàåò âûïîëíåíèå ñêðèïòà
      Run = false;
      return;
   end;
   
   -- Ïîëó÷àåò ØÀÃ ÖÅÍÛ ÈÍÑÒÐÓÌÅÍÒÀ
   SEC_PRICE_STEP = getParamEx(CLASS_CODE, SEC_CODE, "SEC_PRICE_STEP").param_value;
end;

function main()
   -- Âûâîäèò ñîîáùåíèå
   message('Ïðîñòîé MA-ðîáîò: '..ROBOT_STATE);
   -- "Áåñêîíå÷íûé" öèêë
   while Run do 
      --Åñëè ÑÎÑÒÎßÍÈÅ ðîáîòà "Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ"
      if ROBOT_STATE == 'Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ' then
         -- Âûâîäèò ñîîáùåíèå
         message('Ïðîñòîé MA-ðîáîò: Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ');
         -- Äåëàåò 10 ïîïûòîê îòêðûòü ñäåëêó
         local Price = false; -- Ïåðåìåííàÿ äëÿ ïîëó÷åíèÿ ðåçóëüòàòà îòêðûòèÿ ïîçèöèè (öåíà, ëèáî îøèáêà(false))
         for i=1,10 do
            if not Run then return; end; -- Åñëè ñêðèïò îñòàíàâëèâàåòñÿ, íå çàòÿãèâàåò ïðîöåññ
            -- Åñëè ïåðâûé ðàç ïûòàåòñÿ îòêðûòü SELL, à îïåðàöèè øîðò ïî äàííîìó èíñòðóìåíòó çàïðåùåíû
            if CurrentDirect == "SELL" and SEC_NO_SHORT then
               -- Ïðåðûâàåò öèêë FOR
               break; 
            end;
            -- Ñîâåðøàåò ÑÄÅËÊÓ óêàçàííîãî òèïà ["BUY", èëè "SELL"] ïî ðûíî÷íîé(òåêóùåé) öåíå ðàçìåðîì â 1 ëîò,
            --- âîçâðàùàåò öåíó îòêðûòîé ñäåëêè, ëèáî FALSE, åñëè íåâîçìîæíî îòêðûòü ñäåëêó
            Price = Trade(CurrentDirect);
            -- Åñëè ñäåëêà îòêðûëàñü
            if Price ~= false then
               -- Ïðåðûâàåò öèêë FOR
               break;
            end;
            sleep(100); -- Ïàóçà â 100 ìñ ìåæäó ïîïûòêàìè îòêðûòü ñäåëêó
         end;
         if not Run then return; end; -- Åñëè ñêðèïò îñòàíàâëèâàåòñÿ, íå çàòÿãèâàåò ïðîöåññ
         -- Åñëè ñäåëêà îòêðûòà
         if Price ~= false then
            -- Çàïîìèíàåò èíäåêñ ñâå÷è, íà êîòîðîé áûëà îòêðûòà ïîñëåäíÿÿ ïîçèöèÿ (íóæåí äëÿ òîãî, ÷òîáû ïîñëå çàêðûòèÿ ïî ñòîïó òóò æå íå îòêðûòü åùå îäíó ïîçèöèþ)
            LastOpenBarIndex = DS:Size();
            -- Âûâîäèò ñîîáùåíèå
            message('Ïðîñòîé MA-ðîáîò: Îòêðûòà ñäåëêà '..CurrentDirect..' ïî öåíå '..Price);
            -- Äåëàåò 10 ïîïûòîê âûñòàâèòü ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ, è äîæäàòüñÿ çàêðûòèÿ ñäåëêè
            message('Ïðîñòîé MA-ðîáîò: Äåëàåò 10 ïîïûòîê âûñòàâèòü ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ, è äîæäàòüñÿ çàêðûòèÿ ñäåëêè');
            local Result = nil; -- Ïåðåìåííàÿ äëÿ ïîëó÷åíèÿ ðåçóëüòàòà âûñòàâëåíèÿ è ñðàáàòûâàíèÿ ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ
            for i=1,10 do
               if not Run then return; end; -- Åñëè ñêðèïò îñòàíàâëèâàåòñÿ, íå çàòÿãèâàåò ïðîöåññ
               -- Âûñòàâëÿåò ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ, ÆÄÅÒ ïîêà îí ñðàáîòàåò, ïðèíèìàåò ÖÅÍÓ è ÒÈÏ ["BUY", èëè "SELL"] îòêðûòîé ñäåëêè,
               --- âîçâðàùàåò FALSE, åñëè íå óäàëîñü âûñòàâèòü ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ, èëè TRUE, åñëè ñäåëêà çàêðûëàñü,
               --- ëèáî NIL, åñëè ïðè îøèáêå çà 10 ïîïûòîê íå óäàëîñü ïðèíóäèòåëüíî çàêðûòü ïîçèöèþ
               Result = SL_TP(Price, CurrentDirect);
               -- Åñëè ñäåëêà çàêðûëàñü
               if Result == true then
                  -- Ïðåðûâàåò öèêë FOR
                  break;
               end;
            end;
            -- Åñëè çà 10 ïîïûòîê íå óäàëîñü çàêðûòü ïîçèöèþ
            if Result == nil or Result == false then
               -- Âûâîäèò ñîîáùåíèå
               message('Ïðîñòîé MA-ðîáîò: Ïîñëå 10-è ïîïûòîê íå óäàëîñü çàêðûòü ñäåëêó!!! Çàâåðøåíèå ñêðèïòà!!!');
               -- Çàâåðøàåò âûïîëíåíèå ñêðèïòà
               Run = false;
               -- Ïðåðûâàåò îñíîâíîé öèêë WHILE
               break;
            else -- ÓÄÀËÎÑÜ ÇÀÊÐÛÒÜ ÑÄÅËÊÓ               
               -- Âûâîäèò ñîîáùåíèå
               message('Ïðîñòîé MA-ðîáîò: Ñäåëêà çàêðûòà ïî ÑÒÎÏ-ËÎÑÑÓ, ëèáî ÒÅÉÊ-ÏÐÎÔÈÒÓ');
               --Ìåíÿåò ÑÎÑÒÎßÍÈÅ ðîáîòà íà "Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ"
               ROBOT_STATE = 'Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ';
               -- Âûâîäèò ñîîáùåíèå
               message('Ïðîñòîé MA-ðîáîò: Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ');
            end;
         else -- Ñäåëêó íå óäàëîñü îòêðûòü
            -- Åñëè ïåðâûé ðàç ïûòàëñÿ îòêðûòü SELL, à îïåðàöèè øîðò ïî äàííîìó èíñòðóìåíòó çàïðåùåíû
            if CurrentDirect == "SELL" and SEC_NO_SHORT then
               -- Âûâîäèò ñîîáùåíèå
               message('Ïðîñòîé MA-ðîáîò: Áûëà ïåðâàÿ ïîïûòêà ñîâåðøèòü çàïðåùåííóþ îïåðàöèþ øîðò! Áîëüøå ýòîãî íå ïîâòîðèòñÿ:)');
               --Ìåíÿåò ÑÎÑÒÎßÍÈÅ ðîáîòà íà "Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ"
               ROBOT_STATE = 'Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ';
               -- Âûâîäèò ñîîáùåíèå
               message('Ïðîñòîé MA-ðîáîò: Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ');
            else
               -- Âûâîäèò ñîîáùåíèå
               message('Ïðîñòîé MA-ðîáîò: Ïîñëå 10-è ïîïûòîê íå óäàëîñü îòêðûòü ñäåëêó!!! Çàâåðøåíèå ñêðèïòà!!!');
               -- Çàâåðøàåò âûïîëíåíèå ñêðèïòà
               Run = false;
            end;
         end;
      else         
         -- ÑÎÑÒÎßÍÈÅ ðîáîòà 'Â ÏÎÈÑÊÅ ÒÎ×ÊÈ ÂÕÎÄÀ'
         -- Åñëè íà ýòîé ñâå÷å åùå íå áûëî îòêðûòî ïîçèöèé
         if DS:Size() > LastOpenBarIndex then 
            -- Åñëè áûñòðàÿ ïåðåñåêëà ìåäëåííóþ ÑÍÈÇÓ ÂÂÅÐÕ
            if FastMA(DS:Size()-1) <= SlowMA(DS:Size()-1) and FastMA() > SlowMA() then
               -- Çàäàåò íàïðàâëåíèå ÍÀ ÏÎÊÓÏÊÓ
               CurrentDirect = 'BUY';
               message('CurrentDirect = "BUY"');
               -- Ìåíÿåò ÑÎÑÒÎßÍÈÅ ðîáîòà íà "Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ"
               ROBOT_STATE = 'Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ';
            -- Åñëè áûñòðàÿ ïåðåñåêëà ìåäëåííóþ ÑÂÅÐÕÓ ÂÍÈÇ
            elseif FastMA(DS:Size()-1) >= SlowMA(DS:Size()-1) and FastMA() < SlowMA() then
               -- Åñëè ïî äàííîìó èíñòðóìåíòó íå çàïðåùåíû îïåðàöèè øîðò
               if not SEC_NO_SHORT then
                  -- Çàäàåò íàïðàâëåíèå ÍÀ ÏÐÎÄÀÆÓ
                  CurrentDirect = 'SELL';
                  message('CurrentDirect = "SELL"');
                  -- Ìåíÿåò ÑÎÑÒÎßÍÈÅ ðîáîòà íà "Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ"
                  ROBOT_STATE = 'Â ÏÐÎÖÅÑÑÅ ÑÄÅËÊÈ';
               end;
            end;
         end;
      end;
      sleep(10);--Ïàóçà 10 ìñ, äëÿ òîãî, ÷òîáû íå ïåðåãðóæàòü ïðîöåññîð êîìïüþòåðà
   end;
end;

-- Ôóíêöèÿ âûçûâàåòñÿ òåðìèíàëîì QUIK ïðè ïîëó÷åíèè îòâåòà íà òðàíçàêöèþ ïîëüçîâàòåëÿ
function OnTransReply(trans_reply)
   -- Åñëè ïîñòóïèëà èíôîðìàöèÿ ïî òåêóùåé òðàíçàêöèè
   if trans_reply.trans_id == trans_id then
      -- Ïåðåäàåò ñòàòóñ â ãëîáàëüíóþ ïåðåìåííóþ
      trans_Status = trans_reply.status;
      -- Ïåðåäàåò ñîîáùåíèå â ãëîáàëüíóþ ïåðåìåííóþ
      trans_result_msg  = trans_reply.result_msg;
   end;
end;

-- Ôóíêöèÿ ÂÛÇÛÂÀÅÒÑß ÒÅÐÌÈÍÀËÎÌ QUIK ïðè îñòàíîâêå ñêðèïòà
function OnStop()
   Run = false;
end;

-----------------------------
-- ÂÑÏÎÌÎÃÀÒÅËÜÍÛÅ ÔÓÍÊÖÈÈ --
-----------------------------

-- Ñîâåðøàåò ÑÄÅËÊÓ óêàçàííîãî òèïà (Type) ["BUY", èëè "SELL"] ïî ðûíî÷íîé(òåêóùåé) öåíå ðàçìåðîì â 1 ëîò,
--- âîçâðàùàåò öåíó îòêðûòîé ñäåëêè, ëèáî FALSE, åñëè íåâîçìîæíî îòêðûòü ñäåëêó
function Trade(Type)
   --Ïîëó÷àåò ID òðàíçàêöèè
   trans_id = trans_id + 1;

   local Price = 0;
   local Operation = '';
   --Óñòàíàâëèâàåò öåíó è îïåðàöèþ, â çàâèñèìîñòè îò òèïà ñäåëêè è îò êëàññà èíñòðóìåíòà
   if Type == 'BUY' then
      if CLASS_CODE ~= 'QJSIM' and CLASS_CODE ~= 'TQBR' then Price = getParamEx(CLASS_CODE, SEC_CODE, 'offer').param_value + 10*SEC_PRICE_STEP;end; -- ïî öåíå, çàâûøåííîé íà 10 ìèí. øàãîâ öåíû
      Operation = 'B';
   else
      if CLASS_CODE ~= 'QJSIM' and CLASS_CODE ~= 'TQBR' then Price = getParamEx(CLASS_CODE, SEC_CODE, 'bid').param_value - 10*SEC_PRICE_STEP;end; -- ïî öåíå, çàíèæåííîé íà 10 ìèí. øàãîâ öåíû
      Operation = 'S';
   end;
   -- Çàïîëíÿåò ñòðóêòóðó äëÿ îòïðàâêè òðàíçàêöèè
   local Transaction={
      ['TRANS_ID']   = tostring(trans_id),
      ['ACTION']     = 'NEW_ORDER',
      ['CLASSCODE']  = CLASS_CODE,
      ['SECCODE']    = SEC_CODE,
      ['OPERATION']  = Operation, -- îïåðàöèÿ ("B" - buy, èëè "S" - sell)
      ['TYPE']       = 'M', -- ïî ðûíêó (MARKET)
      ['QUANTITY']   = '1', -- êîëè÷åñòâî
      ['ACCOUNT']    = ACCOUNT,
      ['PRICE']      = tostring(Price),
      ['COMMENT']    = 'Ïðîñòîé MA-ðîáîò'
   }
   -- Îòïðàâëÿåò òðàíçàêöèþ
   sendTransaction(Transaction);
   -- Æäåò, ïîêà ïîëó÷èò ñòàòóñ òåêóùåé òðàíçàêöèè (ïåðåìåííûå "trans_Status" è "trans_result_msg" çàïîëíÿþòñÿ â ôóíêöèè OnTransReply())
   while Run and trans_Status == nil do sleep(1); end;
   -- Çàïîìèíàåò çíà÷åíèå
   local Status = trans_Status;
   -- Î÷èùàåò ãëîáàëüíóþ ïåðåìåííóþ
   trans_Status = nil;
   -- Åñëè òðàíçàêöèÿ íå âûïîëíåíà ïî êàêîé-òî ïðè÷èíå
   if Status ~= 3 then
      -- Åñëè äàííûé èíñòðóìåíò çàïðåùåí äëÿ îïåðàöèè øîðò
      if Status == 6 then
         -- Âûâîäèò ñîîáùåíèå
         message('Ïðîñòîé MA-ðîáîò: Äàííûé èíñòðóìåíò çàïðåùåí äëÿ îïåðàöèè øîðò!');
         SEC_NO_SHORT = true;
      else
         -- Âûâîäèò ñîîáùåíèå ñ îøèáêîé
         message('Ïðîñòîé MA-ðîáîò: Òðàíçàêöèÿ íå ïðîøëà!\nÎØÈÁÊÀ: '..trans_result_msg);
      end;
      -- Âîçâðàùàåò FALSE
      return false;
   else --Òðàíçàêöèÿ îòïðàâëåíà
      local OrderNum = nil;
      --ÆÄÅÒ ïîêà ÇÀßÂÊÀ íà ÎÒÊÐÛÒÈÅ ñäåëêè áóäåò ÈÑÏÎËÍÅÍÀ ïîëíîñòüþ
      --Çàïîìèíàåò âðåìÿ íà÷àëà â ñåêóíäàõ
      local BeginTime = os.time();
      while Run and OrderNum == nil do
         --Ïåðåáèðàåò ÒÀÁËÈÖÓ ÇÀßÂÎÊ
         for i=0,getNumberOf('orders')-1 do
            local order = getItem('orders', i);
            --Åñëè çàÿâêà ïî îòïðàâëåííîé òðàíçàêöèè ÈÑÏÎËÍÅÍÀ ÏÎËÍÎÑÒÜÞ
            if order.trans_id == trans_id and order.balance == 0 then
               --Çàïîìèíàåò íîìåð çàÿâêè
               OrderNum  = order.order_num;
               --Ïðåðûâàåò öèêë FOR
               break;
            end;
         end;
         --Åñëè ïðîøëî 10 ñåêóíä, à çàÿâêà íå èñïîëíåíà, çíà÷èò ïðîèçîøëà îøèáêà
         if os.time() - BeginTime > 9 then
            -- Âûâîäèò ñîîáùåíèå ñ îøèáêîé
            message('Ïðîñòîé MA-ðîáîò: Ïðîøëî 10 ñåêóíä, à çàÿâêà íå èñïîëíåíà, çíà÷èò ïðîèçîøëà îøèáêà');
            -- Âîçâðàùàåò FALSE
            return false;
         end;
         sleep(10); -- Ïàóçà 10 ìñ, ÷òîáû íå ïåðåãðóæàòü ïðîöåññîð êîìïüþòåðà
      end;

      --ÆÄÅÒ ïîêà ÑÄÅËÊÀ ÎÒÊÐÛÒÈß ïîçèöèè áóäåò ÑÎÂÅÐØÅÍÀ
      --Çàïîìèíàåò âðåìÿ íà÷àëà â ñåêóíäàõ
      BeginTime = os.time();
      while Run do
         --Ïåðåáèðàåò ÒÀÁËÈÖÓ ÑÄÅËÎÊ
         for i=0,getNumberOf('trades')-1 do
            local trade = getItem('trades', i);
            --Åñëè ñäåëêà ïî òåêóùåé çàÿâêå
            if trade.order_num == OrderNum then
               --Âîçâðàùàåò ôÀÊÒÈ×ÅÑÊÓÞ ÖÅÍÓ îòêðûòîé ñäåëêè
               return trade.price;
            end;
         end;
         --Åñëè ïðîøëî 10 ñåêóíä, à ñäåëêà íå ñîâåðøåíà, çíà÷èò íà äåìî-ñ÷åòå ïðîèçîøëà îøèáêà
         if os.time() - BeginTime > 9 then
            -- Âûâîäèò ñîîáùåíèå ñ îøèáêîé
            message('Ïðîñòîé MA-ðîáîò: Ïðîøëî 10 ñåêóíä, à ñäåëêà íå ñîâåðøåíà, çíà÷èò íà äåìî-ñ÷åòå ïðîèçîøëà îøèáêà');
            -- Âîçâðàùàåò FALSE
            return false;
         end;
         sleep(10); -- Ïàóçà 10 ìñ, ÷òîáû íå ïåðåãðóæàòü ïðîöåññîð êîìïüþòåðà
      end;
   end;
end;

-- ÏÐÈÍÓÄÈÒÅËÜÍÎ ÇÀÊÐÛÂÀÅÒ ÎÒÊÐÛÒÓÞ ÏÎÇÈÖÈÞ ïåðåäàííîãî òèïà (Type) ["BUY", èëè "SELL"]
function KillPos(Type)
   -- Äàåòñÿ 10 ïîïûòîê
   local Count = 0; -- Ñ÷åò÷èê ïîïûòîê
   if Type == 'BUY' then
      -- Ïîêà ñêðèïò íå îñòàíîâëåí è ïîçèöèÿ íå çàêðûòà
      while Run and not Trade('SELL') do -- Îòêðûâàåò SELL, òåì ñàìûì çàêðûâàÿ BUY, åñëè Trade('SELL') âåðíåò TRUE, öèêë ïðåêðàòèòñÿ
         Count = Count + 1; -- Óâåëè÷èâàåò ñ÷åò÷èê
         -- Åñëè çà 10 ïîïûòîê íå óäàëîñü çàêðûòü ïîçèöèþ
         if Count == 10 then
            -- Âîçâðàùàåò NIL
            return nil;
         end;
         sleep(100); -- Ïàóçà 100 ìñ, ÷òîáû èçìåíèëàñü ñèòóàöèÿ íà ñåðâåðå
      end;
   else
      -- Ïîêà ñêðèïò íå îñòàíîâëåí è ïîçèöèÿ íå çàêðûòà
      while Run and not Trade('BUY') do -- Îòêðûâàåò BUY, òåì ñàìûì çàêðûâàÿ SELL, åñëè Trade('BUY') âåðíåò TRUE, öèêë ïðåêðàòèòñÿ
         Count = Count + 1; -- Óâåëè÷èâàåò ñ÷åò÷èê
         -- Åñëè çà 10 ïîïûòîê íå óäàëîñü çàêðûòü ïîçèöèþ
         if Count == 10 then
            -- Âîçâðàùàåò NIL
            return nil;
         end;
         sleep(100); -- Ïàóçà 100 ìñ, ÷òîáû èçìåíèëàñü ñèòóàöèÿ íà ñåðâåðå
      end;
   end;
   -- Âîçâðàùàåò TRUE, åñëè óäàëîñü ïðèíóäèòåëüíî çàêðûòü ïîçèöèþ
   return true;
end;

-- Âûñòàâëÿåò ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ, ÆÄÅÒ ïîêà îí ñðàáîòàåò, ïðèíèìàåò ÖÅÍÓ (Price) è ÒÈÏ (Type) ["BUY", èëè "SELL"] îòêðûòîé ñäåëêè,
--- âîçâðàùàåò FALSE, åñëè íå óäàëîñü âûñòàâèòü ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ, ëèáî TRUE, åñëè ñäåëêà çàêðûëàñü,
--- ëèáî NIL, åñëè ïðè îøèáêå çà 10 ïîïûòîê íå óäàëîñü ïðèíóäèòåëüíî çàêðûòü ïîçèöèþ
function SL_TP(Price, Type)
   -- ID òðàíçàêöèè
   trans_id = trans_id + 1;

	-- Íàõîäèò íàïðàâëåíèå äëÿ çàÿâêè
	local operation = "";
	local price = "0"; -- Öåíà, ïî êîòîðîé âûñòàâèòñÿ çàÿâêà ïðè ñðàáàòûâàíèè Ñòîï-Ëîññà (äëÿ ðûíî÷íîé çàÿâêè ïî àêöèÿì äîëæíà áûòü 0)
	local stopprice = ""; -- Öåíà Òåéê-Ïðîôèòà
	local stopprice2 = ""; -- Öåíà Ñòîï-Ëîññà
   local market = "YES"; -- Ïîñëå ñðàáàòûâàíèÿ Òåéêà, èëè Ñòîïà, çàÿâêà ñðàáîòàåò ïî ðûíî÷íîé öåíå
	-- Åñëè îòêðûò BUY, òî íàïðàâëåíèå ñòîï-ëîññà è òåéê-ïðîôèòà SELL, èíà÷å íàïðàâëåíèå ñòîï-ëîññà è òåéê-ïðîôèòà BUY
	if Type == 'BUY' then
		operation = "S"; -- Òåéê-ïðîôèò è Ñòîï-ëîññ íà ïðîäàæó(÷òîáû çàêðûòü BUY, íóæíî îòêðûòü SELL)
      -- Åñëè íå àêöèè
      if CLASS_CODE ~= 'QJSIM' and CLASS_CODE ~= 'TQBR' then
         price = tostring(math.floor(getParamEx(CLASS_CODE, SEC_CODE, 'PRICEMIN').param_value)); -- Öåíà âûñòàâëÿåìîé çàÿâêè ïîñëå ñòðàáàòûâàíèÿ Ñòîïà ìèíèìàëüíî âîçìîæíàÿ, ÷òîáû íå ïðîñêîëüçíóëî
         market = "NO";  -- Ïîñëå ñðàáàòûâàíèÿ Òåéêà, èëè Ñòîïà, çàÿâêà ñðàáîòàåò ÍÅ ïî ðûíî÷íîé öåíå
      end;
		stopprice	= tostring(Price + TAKE_PROFIT*SEC_PRICE_STEP); -- Óðîâåíü öåíû, êîãäà àêòèâèðóåòñÿ Òåéê-ïðîôèò
		stopprice2	= tostring(Price - STOP_LOSS*SEC_PRICE_STEP); -- Óðîâåíü öåíû, êîãäà àêòèâèðóåòñÿ Ñòîï-ëîññ
	else -- îòêðûò SELL
		operation = "B"; -- Òåéê-ïðîôèò è Ñòîï-ëîññ íà ïîêóïêó(÷òîáû çàêðûòü SELL, íóæíî îòêðûòü BUY)
      -- Åñëè íå àêöèè
		if CLASS_CODE ~= 'QJSIM' and CLASS_CODE ~= 'TQBR' then
         price = tostring(math.floor(getParamEx(CLASS_CODE, SEC_CODE, 'PRICEMAX').param_value)); -- Öåíà âûñòàâëÿåìîé çàÿâêè ïîñëå ñòðàáàòûâàíèÿ Ñòîïà ìàêñèìàëüíî âîçìîæíàÿ, ÷òîáû íå ïðîñêîëüçíóëî
         market = "NO";  -- Ïîñëå ñðàáàòûâàíèÿ Òåéêà, èëè Ñòîïà, çàÿâêà ñðàáîòàåò ÍÅ ïî ðûíî÷íîé öåíå
      end;
		stopprice	= tostring(Price - TAKE_PROFIT*SEC_PRICE_STEP); -- Óðîâåíü öåíû, êîãäà àêòèâèðóåòñÿ Òåéê-ïðîôèò
		stopprice2	= tostring(Price + STOP_LOSS*SEC_PRICE_STEP); -- Óðîâåíü öåíû, êîãäà àêòèâèðóåòñÿ Ñòîï-ëîññ
	end;
	-- Çàïîëíÿåò ñòðóêòóðó äëÿ îòïðàâêè òðàíçàêöèè íà Ñòîï-ëîññ è Òåéê-ïðîôèò
	local Transaction = {
      ["ACTION"]              = "NEW_STOP_ORDER", -- Òèï çàÿâêè
		["TRANS_ID"]            = tostring(trans_id),
		["CLASSCODE"]           = CLASS_CODE,
		["SECCODE"]             = SEC_CODE,
		["ACCOUNT"]             = ACCOUNT,
		["OPERATION"]           = operation, -- Îïåðàöèÿ ("B" - ïîêóïêà(BUY), "S" - ïðîäàæà(SELL))
		["QUANTITY"]            = "1", -- Êîëè÷åñòâî â ëîòàõ
		["PRICE"]               = price, -- Öåíà, ïî êîòîðîé âûñòàâèòñÿ çàÿâêà ïðè ñðàáàòûâàíèè Ñòîï-Ëîññà (äëÿ ðûíî÷íîé çàÿâêè ïî àêöèÿì äîëæíà áûòü 0)
		["STOPPRICE"]           = stopprice, -- Öåíà Òåéê-Ïðîôèòà
		["STOP_ORDER_KIND"]     = "TAKE_PROFIT_AND_STOP_LIMIT_ORDER", -- Òèï ñòîï-çàÿâêè
		["EXPIRY_DATE"]         = "TODAY", -- Ñðîê äåéñòâèÿ ñòîï-çàÿâêè ("GTC" – äî îòìåíû,"TODAY" - äî îêîí÷àíèÿ òåêóùåé òîðãîâîé ñåññèè, Äàòà â ôîðìàòå "ÃÃÌÌÄÄ")
      -- "OFFSET" - (ÎÒÑÒÓÏ)Åñëè öåíà äîñòèãëà Òåéê-ïðîôèòà è èäåò äàëüøå â ïðèáûëü,
      -- òî Òåéê-ïðîôèò ñðàáîòàåò òîëüêî êîãäà öåíà âåðíåòñÿ ìèíèìóì íà 2 øàãà öåíû íàçàä,
      -- ýòî ìîæåò ïîòåíöèàëüíî óâåëè÷èòü ïðèáûëü
		["OFFSET"]              = tostring(2*SEC_PRICE_STEP),
		["OFFSET_UNITS"]        = "PRICE_UNITS", -- Åäèíèöû èçìåðåíèÿ îòñòóïà ("PRICE_UNITS" - øàã öåíû, èëè "PERCENTS" - ïðîöåíòû)
      -- "SPREAD" - Êîãäà ñðàáîòàåò Òåéê-ïðîôèò, âûñòàâèòñÿ çàÿâêà ïî öåíå õóæå òåêóùåé íà 100 øàãîâ öåíû,
      -- êîòîðàÿ ÀÂÒÎÌÀÒÈ×ÅÑÊÈ ÓÄÎÂËÅÒÂÎÐÈÒÑß ÏÎ ÒÅÊÓÙÅÉ ËÓ×ØÅÉ ÖÅÍÅ,
      -- íî òî, ÷òî öåíà çíà÷èòåëüíî õóæå, ñïàñåò îò ïðîñêàëüçûâàíèÿ,
      -- èíà÷å, ñäåëêà ìîæåò ïðîñòî íå çàêðûòüñÿ (çàÿâêà íà çàêðûòèå áóäåò âûñòàâëåíà, íî öåíà ê òîìó âðåìåíè åå óæå ïðîñêî÷èò)
		["SPREAD"]              = tostring(100*SEC_PRICE_STEP),
		["SPREAD_UNITS"]        = "PRICE_UNITS", -- Åäèíèöû èçìåðåíèÿ çàùèòíîãî ñïðýäà ("PRICE_UNITS" - øàã öåíû, èëè "PERCENTS" - ïðîöåíòû)
      -- "MARKET_TAKE_PROFIT" = ("YES", èëè "NO") äîëæíà ëè âûñòàâèòñÿ çàÿâêà ïî ðûíî÷íîé öåíå ïðè ñðàáàòûâàíèè Òåéê-Ïðîôèòà.
      -- Äëÿ ðûíêà FORTS ðûíî÷íûå çàÿâêè, êàê ïðàâèëî, çàïðåùåíû,
      -- äëÿ ëèìèòèðîâàííîé çàÿâêè íà FORTS íóæíî óêàçûâàòü çàâåäîìî õóäøóþ öåíó, ÷òîáû îíà ñðàáîòàëà ñðàçó æå, êàê ðûíî÷íàÿ
		["MARKET_TAKE_PROFIT"]  = market,
		["STOPPRICE2"]          = stopprice2, -- Öåíà Ñòîï-Ëîññà
		["IS_ACTIVE_IN_TIME"]   = "NO",
      -- "MARKET_TAKE_PROFIT" = ("YES", èëè "NO") äîëæíà ëè âûñòàâèòñÿ çàÿâêà ïî ðûíî÷íîé öåíå ïðè ñðàáàòûâàíèè Ñòîï-Ëîññà.
      -- Äëÿ ðûíêà FORTS ðûíî÷íûå çàÿâêè, êàê ïðàâèëî, çàïðåùåíû,
      -- äëÿ ëèìèòèðîâàííîé çàÿâêè íà FORTS íóæíî óêàçûâàòü çàâåäîìî õóäøóþ öåíó, ÷òîáû îíà ñðàáîòàëà ñðàçó æå, êàê ðûíî÷íàÿ
		["MARKET_STOP_LIMIT"]   = market,
      ["COMMENT"]             = "Ïðîñòîé MA-ðîáîò ÒÅÉÊ-ÏÐÎÔÈÒ è ÑÒÎÏ-ËÎÑÑ"
	}
   -- Îòïðàâëÿåò òðàíçàêöèþ íà óñòàíîâêó ÒÅÉÊ-ÏÐÎÔÈÒ è ÑÒÎÏ-ËÎÑÑ
	sendTransaction(Transaction);   
   -- Æäåò, ïîêà íå ïîëó÷èò ñòàòóñ òåêóùåé òðàíçàêöèè (ïåðåìåííûå "trans_Status" è "trans_result_msg" çàïîëíÿþòñÿ â ôóíêöèè OnTransReply())
   while Run and trans_Status == nil do sleep(10); end;
   -- Çàïîìèíàåò çíà÷åíèå
   local Status = trans_Status;
   -- Î÷èùàåò ãëîáàëüíóþ ïåðåìåííóþ
   trans_Status = nil;
   -- Åñëè òðàíçàêöèÿ íå âûïîëíåíà ïî êàêîé-òî ïðè÷èíå
   if Status ~= 3 then
      -- Âûâîäèò ñîîáùåíèå ñ îøèáêîé
      message('Ïðîñòîé MA-ðîáîò: Óñòàíîâêà ÒÅÉÊ-ÏÐÎÔÈÒ è ÑÒÎÏ-ËÎÑÑ íå óäàëàñü!\nÎØÈÁÊÀ: '..trans_result_msg);
      -- Âîçâðàùàåò FALSE
      return false;
   else
      -- Âûâîäèò ñîîáùåíèå
      message('Ïðîñòîé MA-ðîáîò: ÂÛÑÒÀÂËÅÍÀ çàÿâêà ÒÅÉÊ-ÏÐÎÔÈÒ è ÑÒÎÏ-ËÎÑÑ: '..trans_id);
      local OrderNum_CLOSE = nil;
      -- ÆÄÅÒ ïîêà ÑÒÎÏ-ÇÀßÂÊÀ íà ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ áóäåò ÈÑÏÎËÍÅÍÀ ïîëíîñòüþ
      while Run and OrderNum_CLOSE == nil do
         -- Ïåðåáèðàåò ÒÀÁËÈÖÓ ÑÒÎÏ-ÇÀßÂÎÊ
         for i=0,getNumberOf("stop_orders")-1 do
            local stop_order = getItem("stop_orders", i);
            -- Åñëè çàÿâêà ïî òåêóùåé òðàíçàêöèè ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ
            if stop_order.trans_id == trans_id then
               -- Åñëè çàÿâêà ïî îòïðàâëåííîé ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ òðàíçàêöèè ÈÑÏÎËÍÅÍÀ ÏÎËÍÎÑÒÜÞ
               if stop_order.balance == 0 then
                  -- Åñëè ïî íàñòóïëåíèþ ñòîï-öåíû âûñòàâëåíà çàÿâêà
                  if stop_order.linkedorder > 0 then
                     -- Çàïîìèíàåò íîìåð çàÿâêè, êîòîðàÿ áûëà ñîçäàíà ïðè ñðàáàòûâàíèè ÑÒÎÏ-ËÎÑÑ, èëè ÒÅÉÊ-ÏÐÎÔÈÒ
                     OrderNum_CLOSE  = stop_order.linkedorder;
                     -- Ïðåðûâàåò öèêë FOR
                     break;
                  -- Ñòîï-çàÿâêà ñðàáîòàëà, íî áûëà îòâåðãíóòà òîðãîâîé ñèñòåìîé
                  elseif CheckBit(stop_order.flags, 10) == 1 then
                     -- ÏÐÈÍÓÄÈÒÅËÜÍÎ ÇÀÊÐÛÂÀÅÒ ÎÒÊÐÛÒÓÞ ÏÎÇÈÖÈÞ è âûõîäèò èç ôóíêöèè
                     return KillPos(Type);
                  end;
               end;
            end;
         end;
         sleep(10); -- Ïàóçà 10 ìñ, ÷òîáû íå ïåðåãðóæàòü ïðîöåññîð êîìïüþòåðà
      end;
      --ÆÄÅÒ ïîêà ÑÄÅËÊÀ ÇÀÊÐÛÒÈß ïîçèöèè áóäåò ÑÎÂÅÐØÅÍÀ
      --Çàïîìèíàåò âðåìÿ íà÷àëà â ñåêóíäàõ
      BeginTime = os.time();
      while Run do
         --Ïåðåáèðàåò ÒÀÁËÈÖÓ ÑÄÅËÎÊ
         for i=0,getNumberOf("trades")-1 do
            local trade = getItem("trades", i);
            --Åñëè ñäåëêà ïî òåêóùåé çàÿâêå íà ÑÒÎÏ-ËÎÑÑ è ÒÅÉÊ-ÏÐÎÔÈÒ
            if trade.order_num == OrderNum_CLOSE then
               -- Âîçâðàùàåò TRUE
               return true;
            end;
         end;
         --Åñëè ïðîøëî 10 ñåêóíä, à ñäåëêà íå ñîâåðøåíà, çíà÷èò íà äåìî-ñ÷åòå ïðîèçîøëà îøèáêà ñåðâåðà "Îáðàáîòêà êðîññ-çàÿâîê áëîêèðîâàíà"
         if os.time() - BeginTime > 9 then
            -- ÏÐÈÍÓÄÈÒÅËÜÍÎ ÇÀÊÐÛÂÀÅÒ ÎÒÊÐÛÒÓÞ ÏÎÇÈÖÈÞ è âûõîäèò èç ôóíêöèè
            return KillPos(Type);
         end;
         sleep(1);
      end;
   end;
end;

-- Âîçâðàùàåò ÇÍÀ×ÅÍÈÅ ÌÅÄËÅÍÍÎÉ ñêîëüçÿùåé ïî èíäåêñó ñâå÷è (ïî óìîë÷àíèþ: ïîñëåäíÿÿ)
function SlowMA(Index)
   -- Åñëè èíäåêñ ñâå÷è íå óêàçàí, òî óñòàíàâëèâàåò èíäåêñ ïîñëåäíåé ñâå÷è
   if Index == nil then Index = DS:Size(); end;
   -- Ñóììà çíà÷åíèé SLOW_MA_SOURCE íà SLOW_MA_PERIOD ñâå÷àõ
   local Sum = 0;
   -- Ïåðåáèðàåò ïîñëåäíèå SLOW_MA_PERIOD ñâå÷åé
   for i=Index, Index - (SLOW_MA_PERIOD - 1), -1 do      
      -- Ñ÷èòàåò ñóììó, èñõîäÿ èç âûáðàííîãî èñòî÷íèêà äëÿ ìåäëåííîé ñêîëüçÿùåé
      if SLOW_MA_SOURCE == 'O' then
         Sum = Sum + DS:O(i);
      elseif SLOW_MA_SOURCE == 'C' then
         Sum = Sum + DS:C(i);
      elseif SLOW_MA_SOURCE == 'H' then
         Sum = Sum + DS:H(i);
      elseif SLOW_MA_SOURCE == 'L' then
         Sum = Sum + DS:L(i);
      else
         message('Ïðîñòîé MA-ðîáîò:ÎØÈÁÊÀ! Íå âåðíî óêàçàí èñòî÷íèê äëÿ ìåäëåííîé ñêîëüçÿùåé!');
         -- Îñòàíàâëèâàåò ñêðèïò
         OnStop();
      end;
   end;
   -- Âîçâðàùàåò çíà÷åíèå
   return Sum/SLOW_MA_PERIOD;
end;
-- Âîçâðàùàåò ÇÍÀ×ÅÍÈÅ ÁÛÑÒÐÎÉ ñêîëüçÿùåé ïî èíäåêñó ñâå÷è (ïî óìîë÷àíèþ: ïîñëåäíÿÿ)
function FastMA(Index)
   -- Åñëè èíäåêñ ñâå÷è íå óêàçàí, òî óñòàíàâëèâàåò èíäåêñ ïîñëåäíåé ñâå÷è
   if Index == nil then Index = DS:Size(); end;
   -- Ñóììà çíà÷åíèé FAST_MA_SOURCE íà FAST_MA_PERIOD ñâå÷àõ
   local Sum = 0;
   -- Ïåðåáèðàåò ïîñëåäíèå FAST_MA_PERIOD ñâå÷åé
   for i=Index, Index - (FAST_MA_PERIOD - 1), -1 do
      -- Ñ÷èòàåò ñóììó, èñõîäÿ èç âûáðàííîãî èñòî÷íèêà äëÿ áûñòðîé ñêîëüçÿùåé
      if FAST_MA_SOURCE == 'O' then
         Sum = Sum + DS:O(i);
      elseif FAST_MA_SOURCE == 'C' then
         Sum = Sum + DS:C(i);
      elseif FAST_MA_SOURCE == 'H' then
         Sum = Sum + DS:H(i);
      elseif FAST_MA_SOURCE == 'L' then
         Sum = Sum + DS:L(i);
      else
         message('Ïðîñòîé MA-ðîáîò:ÎØÈÁÊÀ! Íå âåðíî óêàçàí èñòî÷íèê äëÿ áûñòðîé ñêîëüçÿùåé!');
         -- Îñòàíàâëèâàåò ñêðèïò
         OnStop();
      end;
   end;
   -- Âîçâðàùàåò çíà÷åíèå
   return Sum/FAST_MA_PERIOD;
end;

-- Ôóíêöèÿ âîçâðàùàåò çíà÷åíèå áèòà (÷èñëî 0, èëè 1) ïîä íîìåðîì bit (íà÷èíàþòñÿ ñ 0) â ÷èñëå flags, åñëè òàêîãî áèòà íåò, âîçâðàùàåò nil
function CheckBit(flags, bit)
   -- Ïðîâåðÿåò, ÷òî ïåðåäàííûå àðãóìåíòû ÿâëÿþòñÿ ÷èñëàìè
   if type(flags) ~= "number" then error("Ïðåäóïðåæäåíèå!!! Checkbit: 1-é àðãóìåíò íå ÷èñëî!"); end;
   if type(bit) ~= "number" then error("Ïðåäóïðåæäåíèå!!! Checkbit: 2-é àðãóìåíò íå ÷èñëî!"); end;
   local RevBitsStr  = ""; -- Ïåðåâåðíóòîå (çàäîì íàïåðåä) ñòðîêîâîå ïðåäñòàâëåíèå äâîè÷íîãî ïðåäñòàâëåíèÿ ïåðåäàííîãî äåñÿòè÷íîãî ÷èñëà (flags)
   local Fmod = 0; -- Îñòàòîê îò äåëåíèÿ
   local Go = true; -- Ôëàã ðàáîòû öèêëà
   while Go do
      Fmod = math.fmod(flags, 2); -- Îñòàòîê îò äåëåíèÿ
      flags = math.floor(flags/2); -- Îñòàâëÿåò äëÿ ñëåäóþùåé èòåðàöèè öèêëà òîëüêî öåëóþ ÷àñòü îò äåëåíèÿ
      RevBitsStr = RevBitsStr ..tostring(Fmod); -- Äîáàâëÿåò ñïðàâà îñòàòîê îò äåëåíèÿ
      if flags == 0 then Go = false; end; -- Åñëè áûë ïîñëåäíèé áèò, çàâåðøàåò öèêë
   end;
   -- Âîçâðàùàåò çíà÷åíèå áèòà
   local Result = RevBitsStr :sub(bit+1,bit+1);
   if Result == "0" then return 0;
   elseif Result == "1" then return 1;
   else return nil;
   end;
end;